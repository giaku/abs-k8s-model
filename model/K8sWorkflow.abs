module K8sWorkflow;

export *;

import * from K8sService;
import * from K8sUtil;

/*import * from ABS.DC;

import * from K8sUtil;
import * from ABS.Scheduler;*/

interface ServiceTask{
  Unit execute();
}

class ServiceRequest(ServiceEndpoint se, Request request) implements ServiceTask {
  Unit execute(){
    await se!invokeService(request);
  }
}

class ServiceWorkflow(List<List<ServiceTask>> tasks) implements ServiceTask {

  Unit execute(){
    foreach (tList in tasks){
      this.executeParallel(tList);
    }
  }

  Unit executeParallel(List<ServiceTask> list){
    List<Fut<Unit>> res = list[];

    foreach (t in list){ // all called in parallel
      Fut<Unit> f = t!execute();
      res = appendright(res,f);
    }

    foreach (r in res){ // wait for all to complete
      await r?;
    }
  }

}
